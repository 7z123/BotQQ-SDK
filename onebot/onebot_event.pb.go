// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: onebot_event.proto

package onebot

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type C2CMessageEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time        int64                   `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	SelfId      int64                   `protobuf:"varint,2,opt,name=self_id,json=selfId,proto3" json:"self_id,omitempty"`
	PostType    string                  `protobuf:"bytes,3,opt,name=post_type,json=postType,proto3" json:"post_type,omitempty"`
	MessageType string                  `protobuf:"bytes,4,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	SubType     string                  `protobuf:"bytes,5,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	MessageId   string                  `protobuf:"bytes,6,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	UserId      string                  `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // C2C user_openid, 频道 tiny_id
	Message     []*Message              `protobuf:"bytes,8,rep,name=message,proto3" json:"message,omitempty"`
	RawMessage  string                  `protobuf:"bytes,9,opt,name=raw_message,json=rawMessage,proto3" json:"raw_message,omitempty"`
	Font        int32                   `protobuf:"varint,10,opt,name=font,proto3" json:"font,omitempty"`
	Sender      *C2CMessageEvent_Sender `protobuf:"bytes,11,opt,name=sender,proto3" json:"sender,omitempty"`
	GuildId     string                  `protobuf:"bytes,12,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`       // 频道私信传入
	ChannelId   string                  `protobuf:"bytes,13,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"` // 频道私信传入
	Extra       map[string]string       `protobuf:"bytes,255,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *C2CMessageEvent) Reset() {
	*x = C2CMessageEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2CMessageEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2CMessageEvent) ProtoMessage() {}

func (x *C2CMessageEvent) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2CMessageEvent.ProtoReflect.Descriptor instead.
func (*C2CMessageEvent) Descriptor() ([]byte, []int) {
	return file_onebot_event_proto_rawDescGZIP(), []int{0}
}

func (x *C2CMessageEvent) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *C2CMessageEvent) GetSelfId() int64 {
	if x != nil {
		return x.SelfId
	}
	return 0
}

func (x *C2CMessageEvent) GetPostType() string {
	if x != nil {
		return x.PostType
	}
	return ""
}

func (x *C2CMessageEvent) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *C2CMessageEvent) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *C2CMessageEvent) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *C2CMessageEvent) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *C2CMessageEvent) GetMessage() []*Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *C2CMessageEvent) GetRawMessage() string {
	if x != nil {
		return x.RawMessage
	}
	return ""
}

func (x *C2CMessageEvent) GetFont() int32 {
	if x != nil {
		return x.Font
	}
	return 0
}

func (x *C2CMessageEvent) GetSender() *C2CMessageEvent_Sender {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *C2CMessageEvent) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

func (x *C2CMessageEvent) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *C2CMessageEvent) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type GroupMessageEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time        int64                          `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	SelfId      int64                          `protobuf:"varint,2,opt,name=self_id,json=selfId,proto3" json:"self_id,omitempty"`
	PostType    string                         `protobuf:"bytes,3,opt,name=post_type,json=postType,proto3" json:"post_type,omitempty"`
	MessageType string                         `protobuf:"bytes,4,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"` // group / （guild/根据guild_id字段判断）
	SubType     string                         `protobuf:"bytes,5,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	MessageId   string                         `protobuf:"bytes,6,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	GroupId     string                         `protobuf:"bytes,7,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"` // 群聊时 group_open_id , 频聊时 channel_id
	UserId      string                         `protobuf:"bytes,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`    // 群聊时 member_openid , 频聊时 tiny_id
	Anonymous   *GroupMessageEvent_Anonymous   `protobuf:"bytes,9,opt,name=anonymous,proto3" json:"anonymous,omitempty"`
	Message     []*Message                     `protobuf:"bytes,10,rep,name=message,proto3" json:"message,omitempty"`
	RawMessage  string                         `protobuf:"bytes,11,opt,name=raw_message,json=rawMessage,proto3" json:"raw_message,omitempty"`
	Font        int32                          `protobuf:"varint,12,opt,name=font,proto3" json:"font,omitempty"`
	Sender      *GroupMessageEvent_Sender      `protobuf:"bytes,13,opt,name=sender,proto3" json:"sender,omitempty"`
	GuildId     string                         `protobuf:"bytes,14,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"` // 频聊时传入
	MessageSeq  int32                          `protobuf:"varint,15,opt,name=message_seq,json=messageSeq,proto3" json:"message_seq,omitempty"`
	Attachments *GroupMessageEvent_Attachments `protobuf:"bytes,16,opt,name=attachments,proto3" json:"attachments,omitempty"`
	Extra       map[string]string              `protobuf:"bytes,255,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GroupMessageEvent) Reset() {
	*x = GroupMessageEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMessageEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMessageEvent) ProtoMessage() {}

func (x *GroupMessageEvent) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMessageEvent.ProtoReflect.Descriptor instead.
func (*GroupMessageEvent) Descriptor() ([]byte, []int) {
	return file_onebot_event_proto_rawDescGZIP(), []int{1}
}

func (x *GroupMessageEvent) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *GroupMessageEvent) GetSelfId() int64 {
	if x != nil {
		return x.SelfId
	}
	return 0
}

func (x *GroupMessageEvent) GetPostType() string {
	if x != nil {
		return x.PostType
	}
	return ""
}

func (x *GroupMessageEvent) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *GroupMessageEvent) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *GroupMessageEvent) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *GroupMessageEvent) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupMessageEvent) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GroupMessageEvent) GetAnonymous() *GroupMessageEvent_Anonymous {
	if x != nil {
		return x.Anonymous
	}
	return nil
}

func (x *GroupMessageEvent) GetMessage() []*Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *GroupMessageEvent) GetRawMessage() string {
	if x != nil {
		return x.RawMessage
	}
	return ""
}

func (x *GroupMessageEvent) GetFont() int32 {
	if x != nil {
		return x.Font
	}
	return 0
}

func (x *GroupMessageEvent) GetSender() *GroupMessageEvent_Sender {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *GroupMessageEvent) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

func (x *GroupMessageEvent) GetMessageSeq() int32 {
	if x != nil {
		return x.MessageSeq
	}
	return 0
}

func (x *GroupMessageEvent) GetAttachments() *GroupMessageEvent_Attachments {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *GroupMessageEvent) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type GroupNotifyEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time       int64  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	SelfId     int64  `protobuf:"varint,2,opt,name=self_id,json=selfId,proto3" json:"self_id,omitempty"`
	PostType   string `protobuf:"bytes,3,opt,name=post_type,json=postType,proto3" json:"post_type,omitempty"`
	NoticeType string `protobuf:"bytes,4,opt,name=notice_type,json=noticeType,proto3" json:"notice_type,omitempty"`
	SubType    string `protobuf:"bytes,5,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	GroupId    string `protobuf:"bytes,6,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	OperatorId string `protobuf:"bytes,7,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	Timestamp  string `protobuf:"bytes,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *GroupNotifyEvent) Reset() {
	*x = GroupNotifyEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupNotifyEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupNotifyEvent) ProtoMessage() {}

func (x *GroupNotifyEvent) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupNotifyEvent.ProtoReflect.Descriptor instead.
func (*GroupNotifyEvent) Descriptor() ([]byte, []int) {
	return file_onebot_event_proto_rawDescGZIP(), []int{2}
}

func (x *GroupNotifyEvent) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *GroupNotifyEvent) GetSelfId() int64 {
	if x != nil {
		return x.SelfId
	}
	return 0
}

func (x *GroupNotifyEvent) GetPostType() string {
	if x != nil {
		return x.PostType
	}
	return ""
}

func (x *GroupNotifyEvent) GetNoticeType() string {
	if x != nil {
		return x.NoticeType
	}
	return ""
}

func (x *GroupNotifyEvent) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *GroupNotifyEvent) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupNotifyEvent) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *GroupNotifyEvent) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type C2CNotifyEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time       int64  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	SelfId     int64  `protobuf:"varint,2,opt,name=self_id,json=selfId,proto3" json:"self_id,omitempty"`
	PostType   string `protobuf:"bytes,3,opt,name=post_type,json=postType,proto3" json:"post_type,omitempty"`
	NoticeType string `protobuf:"bytes,4,opt,name=notice_type,json=noticeType,proto3" json:"notice_type,omitempty"`
	SubType    string `protobuf:"bytes,5,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	Openid     string `protobuf:"bytes,6,opt,name=openid,proto3" json:"openid,omitempty"`
	Timestamp  string `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *C2CNotifyEvent) Reset() {
	*x = C2CNotifyEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2CNotifyEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2CNotifyEvent) ProtoMessage() {}

func (x *C2CNotifyEvent) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2CNotifyEvent.ProtoReflect.Descriptor instead.
func (*C2CNotifyEvent) Descriptor() ([]byte, []int) {
	return file_onebot_event_proto_rawDescGZIP(), []int{3}
}

func (x *C2CNotifyEvent) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *C2CNotifyEvent) GetSelfId() int64 {
	if x != nil {
		return x.SelfId
	}
	return 0
}

func (x *C2CNotifyEvent) GetPostType() string {
	if x != nil {
		return x.PostType
	}
	return ""
}

func (x *C2CNotifyEvent) GetNoticeType() string {
	if x != nil {
		return x.NoticeType
	}
	return ""
}

func (x *C2CNotifyEvent) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *C2CNotifyEvent) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *C2CNotifyEvent) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type C2CMessageEvent_Sender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // C2C user_openid, 频道 tiny_id
	Nickname string   `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex      string   `protobuf:"bytes,3,opt,name=sex,proto3" json:"sex,omitempty"`
	Age      int32    `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`
	Avatar   string   `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	IsBot    bool     `protobuf:"varint,6,opt,name=is_bot,json=isBot,proto3" json:"is_bot,omitempty"`
	JoinAt   string   `protobuf:"bytes,7,opt,name=join_at,json=joinAt,proto3" json:"join_at,omitempty"`
	Roles    []string `protobuf:"bytes,8,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *C2CMessageEvent_Sender) Reset() {
	*x = C2CMessageEvent_Sender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2CMessageEvent_Sender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2CMessageEvent_Sender) ProtoMessage() {}

func (x *C2CMessageEvent_Sender) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2CMessageEvent_Sender.ProtoReflect.Descriptor instead.
func (*C2CMessageEvent_Sender) Descriptor() ([]byte, []int) {
	return file_onebot_event_proto_rawDescGZIP(), []int{0, 0}
}

func (x *C2CMessageEvent_Sender) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *C2CMessageEvent_Sender) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *C2CMessageEvent_Sender) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *C2CMessageEvent_Sender) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *C2CMessageEvent_Sender) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *C2CMessageEvent_Sender) GetIsBot() bool {
	if x != nil {
		return x.IsBot
	}
	return false
}

func (x *C2CMessageEvent_Sender) GetJoinAt() string {
	if x != nil {
		return x.JoinAt
	}
	return ""
}

func (x *C2CMessageEvent_Sender) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type C2CMessageEvent_Attachments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content     string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	ContentType string `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Filename    string `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	Height      int32  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Size        int32  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Url         string `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	Width       int32  `protobuf:"varint,7,opt,name=width,proto3" json:"width,omitempty"`
}

func (x *C2CMessageEvent_Attachments) Reset() {
	*x = C2CMessageEvent_Attachments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2CMessageEvent_Attachments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2CMessageEvent_Attachments) ProtoMessage() {}

func (x *C2CMessageEvent_Attachments) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2CMessageEvent_Attachments.ProtoReflect.Descriptor instead.
func (*C2CMessageEvent_Attachments) Descriptor() ([]byte, []int) {
	return file_onebot_event_proto_rawDescGZIP(), []int{0, 1}
}

func (x *C2CMessageEvent_Attachments) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *C2CMessageEvent_Attachments) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *C2CMessageEvent_Attachments) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *C2CMessageEvent_Attachments) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *C2CMessageEvent_Attachments) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *C2CMessageEvent_Attachments) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *C2CMessageEvent_Attachments) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

type GroupMessageEvent_Anonymous struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Flag string `protobuf:"bytes,3,opt,name=flag,proto3" json:"flag,omitempty"`
}

func (x *GroupMessageEvent_Anonymous) Reset() {
	*x = GroupMessageEvent_Anonymous{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_event_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMessageEvent_Anonymous) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMessageEvent_Anonymous) ProtoMessage() {}

func (x *GroupMessageEvent_Anonymous) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_event_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMessageEvent_Anonymous.ProtoReflect.Descriptor instead.
func (*GroupMessageEvent_Anonymous) Descriptor() ([]byte, []int) {
	return file_onebot_event_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GroupMessageEvent_Anonymous) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GroupMessageEvent_Anonymous) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupMessageEvent_Anonymous) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

type GroupMessageEvent_Sender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Nickname  string   `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Card      string   `protobuf:"bytes,3,opt,name=card,proto3" json:"card,omitempty"`
	Sex       string   `protobuf:"bytes,4,opt,name=sex,proto3" json:"sex,omitempty"`
	Age       int32    `protobuf:"varint,5,opt,name=age,proto3" json:"age,omitempty"`
	Area      string   `protobuf:"bytes,6,opt,name=area,proto3" json:"area,omitempty"`
	Level     string   `protobuf:"bytes,7,opt,name=level,proto3" json:"level,omitempty"`
	Roles     []string `protobuf:"bytes,8,rep,name=roles,proto3" json:"roles,omitempty"`
	Title     string   `protobuf:"bytes,9,opt,name=title,proto3" json:"title,omitempty"`
	Avatar    string   `protobuf:"bytes,10,opt,name=avatar,proto3" json:"avatar,omitempty"`
	IsBot     bool     `protobuf:"varint,11,opt,name=is_bot,json=isBot,proto3" json:"is_bot,omitempty"`
	JoinedAt  string   `protobuf:"bytes,12,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"` //加入时间
	RoleNames []string `protobuf:"bytes,13,rep,name=role_names,json=roleNames,proto3" json:"role_names,omitempty"`
}

func (x *GroupMessageEvent_Sender) Reset() {
	*x = GroupMessageEvent_Sender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_event_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMessageEvent_Sender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMessageEvent_Sender) ProtoMessage() {}

func (x *GroupMessageEvent_Sender) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_event_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMessageEvent_Sender.ProtoReflect.Descriptor instead.
func (*GroupMessageEvent_Sender) Descriptor() ([]byte, []int) {
	return file_onebot_event_proto_rawDescGZIP(), []int{1, 1}
}

func (x *GroupMessageEvent_Sender) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GroupMessageEvent_Sender) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *GroupMessageEvent_Sender) GetCard() string {
	if x != nil {
		return x.Card
	}
	return ""
}

func (x *GroupMessageEvent_Sender) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *GroupMessageEvent_Sender) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *GroupMessageEvent_Sender) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *GroupMessageEvent_Sender) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *GroupMessageEvent_Sender) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *GroupMessageEvent_Sender) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GroupMessageEvent_Sender) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GroupMessageEvent_Sender) GetIsBot() bool {
	if x != nil {
		return x.IsBot
	}
	return false
}

func (x *GroupMessageEvent_Sender) GetJoinedAt() string {
	if x != nil {
		return x.JoinedAt
	}
	return ""
}

func (x *GroupMessageEvent_Sender) GetRoleNames() []string {
	if x != nil {
		return x.RoleNames
	}
	return nil
}

type GroupMessageEvent_Attachments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content     string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	ContentType string `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Filename    string `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	Height      int32  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Size        int32  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Url         string `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	Width       int32  `protobuf:"varint,7,opt,name=width,proto3" json:"width,omitempty"`
}

func (x *GroupMessageEvent_Attachments) Reset() {
	*x = GroupMessageEvent_Attachments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_event_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMessageEvent_Attachments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMessageEvent_Attachments) ProtoMessage() {}

func (x *GroupMessageEvent_Attachments) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_event_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMessageEvent_Attachments.ProtoReflect.Descriptor instead.
func (*GroupMessageEvent_Attachments) Descriptor() ([]byte, []int) {
	return file_onebot_event_proto_rawDescGZIP(), []int{1, 2}
}

func (x *GroupMessageEvent_Attachments) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GroupMessageEvent_Attachments) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *GroupMessageEvent_Attachments) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *GroupMessageEvent_Attachments) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GroupMessageEvent_Attachments) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GroupMessageEvent_Attachments) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GroupMessageEvent_Attachments) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

var File_onebot_event_proto protoreflect.FileDescriptor

var file_onebot_event_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x1a, 0x11, 0x6f, 0x6e,
	0x65, 0x62, 0x6f, 0x74, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x97, 0x07, 0x0a, 0x0f, 0x43, 0x32, 0x43, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6c, 0x66, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x66, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x61, 0x77, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x61, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x6f, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66,
	0x6f, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x43, 0x32, 0x43,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0xff,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x43,
	0x32, 0x43, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x1a, 0xbf, 0x01, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x15, 0x0a, 0x06,
	0x69, 0x73, 0x5f, 0x62, 0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73,
	0x42, 0x6f, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6a, 0x6f, 0x69, 0x6e, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x1a, 0xba, 0x01, 0x0a, 0x0b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x1a,
	0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x82, 0x0a, 0x0a, 0x11, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x66, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x09, 0x61, 0x6e,
	0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f,
	0x75, 0x73, 0x52, 0x09, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x12, 0x29, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x61, 0x77, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x61, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6f, 0x6e,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x6f, 0x6e, 0x74, 0x12, 0x38, 0x0a,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65,
	0x71, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x65, 0x71, 0x12, 0x47, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f,
	0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3b, 0x0a, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0xff, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x43, 0x0a, 0x09, 0x41, 0x6e, 0x6f,
	0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c,
	0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x1a, 0xb6,
	0x02, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x61,
	0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x73, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x62, 0x6f, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x42, 0x6f, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6a,
	0x6f, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x1a, 0xba, 0x01, 0x0a, 0x0b, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf2,
	0x01, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6c, 0x66, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x66, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0xcc, 0x01, 0x0a, 0x0e, 0x43, 0x32, 0x43, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65,
	0x6c, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6c,
	0x66, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_onebot_event_proto_rawDescOnce sync.Once
	file_onebot_event_proto_rawDescData = file_onebot_event_proto_rawDesc
)

func file_onebot_event_proto_rawDescGZIP() []byte {
	file_onebot_event_proto_rawDescOnce.Do(func() {
		file_onebot_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_onebot_event_proto_rawDescData)
	})
	return file_onebot_event_proto_rawDescData
}

var file_onebot_event_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_onebot_event_proto_goTypes = []interface{}{
	(*C2CMessageEvent)(nil),               // 0: onebot.C2CMessageEvent
	(*GroupMessageEvent)(nil),             // 1: onebot.GroupMessageEvent
	(*GroupNotifyEvent)(nil),              // 2: onebot.GroupNotifyEvent
	(*C2CNotifyEvent)(nil),                // 3: onebot.C2CNotifyEvent
	(*C2CMessageEvent_Sender)(nil),        // 4: onebot.C2CMessageEvent.Sender
	(*C2CMessageEvent_Attachments)(nil),   // 5: onebot.C2CMessageEvent.Attachments
	nil,                                   // 6: onebot.C2CMessageEvent.ExtraEntry
	(*GroupMessageEvent_Anonymous)(nil),   // 7: onebot.GroupMessageEvent.Anonymous
	(*GroupMessageEvent_Sender)(nil),      // 8: onebot.GroupMessageEvent.Sender
	(*GroupMessageEvent_Attachments)(nil), // 9: onebot.GroupMessageEvent.Attachments
	nil,                                   // 10: onebot.GroupMessageEvent.ExtraEntry
	(*Message)(nil),                       // 11: onebot.Message
}
var file_onebot_event_proto_depIdxs = []int32{
	11, // 0: onebot.C2CMessageEvent.message:type_name -> onebot.Message
	4,  // 1: onebot.C2CMessageEvent.sender:type_name -> onebot.C2CMessageEvent.Sender
	6,  // 2: onebot.C2CMessageEvent.extra:type_name -> onebot.C2CMessageEvent.ExtraEntry
	7,  // 3: onebot.GroupMessageEvent.anonymous:type_name -> onebot.GroupMessageEvent.Anonymous
	11, // 4: onebot.GroupMessageEvent.message:type_name -> onebot.Message
	8,  // 5: onebot.GroupMessageEvent.sender:type_name -> onebot.GroupMessageEvent.Sender
	9,  // 6: onebot.GroupMessageEvent.attachments:type_name -> onebot.GroupMessageEvent.Attachments
	10, // 7: onebot.GroupMessageEvent.extra:type_name -> onebot.GroupMessageEvent.ExtraEntry
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_onebot_event_proto_init() }
func file_onebot_event_proto_init() {
	if File_onebot_event_proto != nil {
		return
	}
	file_onebot_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_onebot_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2CMessageEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMessageEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupNotifyEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2CNotifyEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_event_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2CMessageEvent_Sender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_event_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2CMessageEvent_Attachments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_event_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMessageEvent_Anonymous); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_event_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMessageEvent_Sender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_event_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMessageEvent_Attachments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_onebot_event_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_onebot_event_proto_goTypes,
		DependencyIndexes: file_onebot_event_proto_depIdxs,
		MessageInfos:      file_onebot_event_proto_msgTypes,
	}.Build()
	File_onebot_event_proto = out.File
	file_onebot_event_proto_rawDesc = nil
	file_onebot_event_proto_goTypes = nil
	file_onebot_event_proto_depIdxs = nil
}
